library(rio)
library(tidyverse)
library(dplyr)
library(dlookr)
library(ggplot2)
library(writexl)
# Knowing the data
dt <- import("DATA/USING/cpnac2023.sav")
###
# -----------
# Filtra solo las columnas con etiquetas definidas
labels_list <- sapply(dt, function(x) attr(x, "labels"))
labels_list <- labels_list[!sapply(labels_list, is.null)]
labels_list
# Export to .txt
# Abre una conexión para escribir en el archivo TXT
fileConn <- file("labels_list.txt")
# Escribe cada elemento de labels_list en una nueva línea en el archivo
writeLines(unlist(labels_list), fileConn)
# Cierra la conexión del archivo
close(fileConn)
View(dt)
```{r, include = False}
# Libraries
library(rio)
# Libraries
library(rio)
library(tidyverse)
library(dplyr)
library(dlookr)
library(ggplot2)
library(writexl)
library(markdown)
```{r, include = False, message=FALSE, error=FALSE, warning=FALSE}
```{r include = False, message=FALSE, error=FALSE, warning=FALSE}
library(writexl)
clear
```{r include=FALSE}
# Knowing the data
dt <- import("DATA/USING/cpnac2023.sav")
getwd
getwd()
setwd('C:/ESPAC')
# Knowing the data
setwd('C:/ESPAC')
dt <- import("DATA/USING/cpnac2023.sav")
getwd()
dt.head()
# Knowing the data
setwd('C:/ESPAC/DATA/USING/')
dt <- import("cpnac2023.sav")
dt.head()
# Knowing the data
setwd('C:/ESPAC/DATA/USING/')
dt <- import("cpnac2023.sav")
dt.head()
head(dt)
```{r include = False, message=FALSE, error=FALSE, warning=FALSE}
```{r librerias, include = False, message=FALSE, error=FALSE, warning=FALSE}
```{r librerias, include = False, message=FALSE, error=FALSE, warning=FALSE}
```{r librerias, include = False, message=FALSE, error=FALSE, warning=FALSE}
# Libraries
library(rio)
library(tidyverse)
library(dplyr)
library(dlookr)
library(ggplot2)
library(writexl)
```{r, include = False, message=FALSE, error=FALSE, warning=FALSE}
```{r , include = False, message=FALSE, error=FALSE, warning=FALSE}
# Libraries
library(rio)
library(tidyverse)
library(dplyr)
library(dlookr)
library(ggplot2)
library(writexl)
```{r include = False, message=FALSE, error=FALSE, warning=FALSE}
dt <- import("cpnac2023.sav")
# Knowing the data
setwd('C:/ESPAC/DATA/USING/')
dt <- import("cpnac2023.sav")
head(dt)
# Knowing the data
setwd('C:/ESPAC/DATA/USING/')
dt <- import("cpnac2023.sav")
head(dt)
head(dt)
ggplot(dt, aes(x = cp_k412)) +
geom_bar()
describe(dt$cp_k412)
dlookr::univar_category(dt$cp_k412)
summary(dt$cp_k412)
attr(dt$cp_k412, 'labels')
dt$cp_k408 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
dt$dt$cp_k412 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(dt$cp_k412)
unique(dt$cp_k412)
dt$dt$cp_k412 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
ggplot(dt, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
dt$cp_k412 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
ggplot(dt, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
ggplot(dt, aes(x = cp_k408)) +
geom_bar(fill = "gray70", color = "black") +  # Color neutro para las barras
labs(x = "Tipo de Semilla", y = "Frecuencia", title = "Semilla de más uso") +  # Etiquetas de ejes y título
theme_minimal()  # Tema minimalista
ggplot(dt, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
library(descr)
freq(dt$cp_k412)
ggplot(dt, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
freq(dt$cp_k412)
View(dt)
perdida <- dt %>%
select(cp_412, ual_prov, fact_exp_fin) %>%
na.omit()
perdida <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin) %>%
na.omit()
summary(perdida$cp_k412)
dt$cp_k412 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(perdida$cp_k412)
unique(dt$cp_k412)
attr(dt$cp_k412, 'labels')
pdd <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin) %>%
na.omit()
pdd$cp_k412 <- factor(dt$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
pdd$cp_k412 <- factor(pdd$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(pdd$cp_k412)
# Knowing the data
dt <- import("DATA/USING/cpnac2023.sav")
# -------
# cp_k412
# ------
View(dt)
pdd <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin) %>%
na.omit()
pdd$cp_k412 <- factor(pdd$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(pdd$cp_k412)
unique(pdd$cp_k412)
attr(pdd$cp_k412, 'labels')
ggplot(pdd, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
View(pdd)
# Knowing the data
dt <- import("DATA/USING/cpnac2023.sav")
dim(dt)
dim(pdd)
pdd <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin) %>%
na.omit(cp_k412)
pdd$cp_k412 <- factor(pdd$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(pdd$cp_k412)
pdd <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin)
dim(pdd)
View(pdd)
freq(dt$cp_k412)
# Knowing the data
dt <- import("DATA/USING/cpnac2023.sav")
pdd <- dt %>%
select(cp_k412, ual_prov, fact_exp_fin) %>%
na.omit(cp_k412)
pdd$cp_k412 <- factor(pdd$cp_k412,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Sequía", "Helada","Plagas","Enfermedades","Inundación","Otra"))
summary(pdd$cp_k412)
unique(pdd$cp_k412)
is.na(pdd$cp_k412)
unique(is.na(pdd$cp_k412))
unique(is.na(pdd$ual_prov))
unique(is.na(pdd$fact_exp_fin))
ggplot(pdd, aes(x = cp_k412)) +
geom_bar(fill = "gray70", color = "black") +
scale_x_discrete(drop = TRUE) +  # Ignora los valores NA en el eje x
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
# Calcular las frecuencias y el porcentaje de cada categoría en la columna cp_k412, ignorando los NA
pdd_summary <- pdd %>%
filter(!is.na(cp_k412)) %>%  # Elimina los NA
count(cp_k412) %>%           # Calcula la frecuencia de cada categoría
mutate(percentage = n / sum(n) * 100) %>%  # Calcula el porcentaje
arrange(desc(n))              # Ordena de mayor a menor frecuencia
# Crear la gráfica ordenada y con etiquetas de porcentaje
ggplot(pdd_summary, aes(x = reorder(cp_k412, -n), y = n)) +  # Ordena de mayor a menor
geom_bar(stat = "identity", fill = "gray70", color = "black") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),  # Añade el porcentaje sobre las barras
vjust = -0.5, size = 3) +
labs(x = "Razón de Pérdida", y = "Frecuencia", title = "Principales razones de pérdida de superficie agrícola") +
theme_minimal()
attr(dt$ual_prov, 'labels')
table(pdd$cp_k412, pdd$ual_prov)
prop.table(pdd$cp_k412, pdd$ual_prov)
prop.table(table(pdd$cp_k412, pdd$ual_prov))
rpund(prop.table(table(pdd$cp_k412, pdd$ual_prov)),0)
round(prop.table(table(pdd$cp_k412, pdd$ual_prov)),0)
round(prop.table(table(pdd$cp_k412, pdd$ual_prov))*100,0)
round(prop.table(table(pdd$cp_k412, pdd$ual_prov))*100,2)
pdd_prov <- pdd %>%
filter(cp_k412 == "Plagas") %>%  # Elimina los NA
count(ual_prov) %>%           # Calcula la frecuencia de cada categoría
mutate(percentage = n / sum(n) * 100) %>%  # Calcula el porcentaje
arrange(desc(n))
pdd_prov
# Crear la gráfica ordenada y con etiquetas de porcentaje
ggplot(pdd_summary, aes(x = reorder(ual_prov, -n), y = n)) +  # Ordena de mayor a menor
geom_bar(stat = "identity", fill = "gray70", color = "black") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),  # Añade el porcentaje sobre las barras
vjust = -0.5, size = 3) +
labs(x = "Provincias", y = "Frecuencia", title = "Principales provincias con pérdida de superficie agrícola") +
theme_minimal()
# Crear la gráfica ordenada y con etiquetas de porcentaje
ggplot(pdd_prov, aes(x = reorder(ual_prov, -n), y = n)) +  # Ordena de mayor a menor
geom_bar(stat = "identity", fill = "gray70", color = "black") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),  # Añade el porcentaje sobre las barras
vjust = -0.5, size = 3) +
labs(x = "Provincias", y = "Frecuencia", title = "Principales provincias con pérdida de superficie agrícola") +
theme_minimal()
# Definir los niveles y las etiquetas
niveles <- c("10", "90", "01", "11", "21", "02", "12", "22", "03", "13",
"23", "04", "14", "24", "05", "15", "06", "16", "07", "17",
"08", "18", "09", "19")
etiquetas <- c("IMBABURA", "ZONA NO DELIMITADA", "AZUAY", "LOJA", "SUCUMBÍOS",
"BOLÍVAR", "LOS RÍOS", "ORELLANA", "CAÑAR", "MANABÍ",
"SANTO DOMINGO DE LOS TSÁCHILAS", "CARCHI", "MORONA SANTIAGO",
"SANTA ELENA", "COTOPAXI", "NAPO", "CHIMBORAZO", "PASTAZA",
"EL ORO", "PICHINCHA", "ESMERALDAS", "TUNGURAHUA", "GUAYAS",
"ZAMORA CHINCHIPE")
# Convertir la variable en factor con los niveles y etiquetas definidos
pdd$ual_prov <- factor(pdd$ual_prov, levels = niveles, labels = etiquetas)
pdd_prov <- pdd %>%
filter(cp_k412 == "Plagas") %>%  # Elimina los NA
count(ual_prov) %>%           # Calcula la frecuencia de cada categoría
mutate(percentage = n / sum(n) * 100) %>%  # Calcula el porcentaje
arrange(desc(n))
# Crear la gráfica ordenada y con etiquetas de porcentaje
ggplot(pdd_prov, aes(x = reorder(ual_prov, -n), y = n)) +  # Ordena de mayor a menor
geom_bar(stat = "identity", fill = "gray70", color = "black") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),  # Añade el porcentaje sobre las barras
vjust = -0.5, size = 3) +
labs(x = "Provincias", y = "Frecuencia", title = "Principales provincias con pérdida de superficie agrícola") +
theme_minimal()
pdd_prov <- pdd %>%
filter(cp_k412 == "Plagas") %>%  # Elimina los NA
count(ual_prov) %>%           # Calcula la frecuencia de cada categoría
mutate(percentage = n / sum(n) * 100) %>%  # Calcula el porcentaje
arrange(desc(n)) %>%
head(7)
# Crear la gráfica ordenada y con etiquetas de porcentaje
ggplot(pdd_prov, aes(x = reorder(ual_prov, -n), y = n)) +  # Ordena de mayor a menor
geom_bar(stat = "identity", fill = "gray70", color = "black") +
geom_text(aes(label = paste0(round(percentage, 1), "%")),  # Añade el porcentaje sobre las barras
vjust = -0.5, size = 3) +
labs(x = "Provincias", y = "Frecuencia", title = "Principales provincias con pérdida de superficie agrícola") +
theme_minimal()
